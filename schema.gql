# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Ipv4Dto {
  value: String!
  validated: Boolean!
}

type GatewayDto implements IResourceDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  serialNumber: String!
  name: String!
  ipv4: Ipv4Dto!
  devices: [String!]!
  devicesObjects: [DeviceDto!]!
}

interface IResourceDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PaginatedGatewayResponse {
  items: [GatewayDto!]!
  total: Int!
  hasMore: Boolean!
}

type DeviceDto implements IResourceDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  uid: Float!
  brand: String!
  status: String!
  date: DateTime!
}

type PaginatedDeviceResponse {
  items: [DeviceDto!]!
  total: Int!
  hasMore: Boolean!
}

type Query {
  getGateway(id: ID!): GatewayDto
  getGateways(limit: Int, skip: Int): PaginatedGatewayResponse!
  filterGateways(filter: GatewayFilterInput = {}, skip: Int = 0, limit: Int = 10): PaginatedGatewayResponse!
  getDevice(id: ID!): DeviceDto
  getDevices(limit: Int, skip: Int): PaginatedDeviceResponse!
  filterDevices(filter: DeviceFilterInput = {}, skip: Int = 0, limit: Int = 10): PaginatedDeviceResponse!
}

input GatewayFilterInput {
  search: String
  id: QueryFilterIdDto
  ipv4: QueryFilterStringDto
}

input QueryFilterIdDto {
  eq: String
  in: [String!]
}

input QueryFilterStringDto {
  eq: String
  in: [String!]
  regex: String
}

input DeviceFilterInput {
  search: String
  id: QueryFilterIdDto
  uid: QueryFilterNumberDto
  brand: QueryFilterStringDto
  status: QueryFilterStringDto
  date: QueryFilterDateDto
}

input QueryFilterNumberDto {
  eq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Int!]
}

input QueryFilterDateDto {
  eq: DateTime
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  in: [DateTime!]
}

type Mutation {
  createGateway(data: GatewayInput!): GatewayDto
  updateGateway(input: GatewayUpdate!, id: ID!): GatewayDto
  deleteGateway(id: ID!): GatewayDto
  createDevice(data: DeviceInput!): DeviceDto
  updateDevice(input: DeviceUpdate!, id: ID!): DeviceDto
  deleteDevice(id: ID!): DeviceDto
}

input GatewayInput {
  serialNumber: String!
  name: String!
  ipv4: Ipv4Input!
  devices: [String!]!
}

input Ipv4Input {
  value: String!
  validated: Boolean
}

input GatewayUpdate {
  serialNumber: String
  name: String
  ipv4: Ipv4Update
  devices: [String!]
}

input Ipv4Update {
  value: String
  validated: Boolean
}

input DeviceInput {
  uid: Float!
  brand: String!
  status: String!
}

input DeviceUpdate {
  uid: Float
  brand: String
  status: String
}
